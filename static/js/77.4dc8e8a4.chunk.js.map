{"version":3,"file":"static/js/77.4dc8e8a4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/CastItem/CastItem.module.css?aa36","components/Cast/CastItem/CastItem.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/moviesAPI.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CastItem_item__-EXbK\",\"accent\":\"CastItem_accent__132hB\"};","import { moviesAPI } from \"services/moviesAPI\"\nimport defaultImgM from \"../../../images/defaultProfileM.png\";\nimport defaultImgF from \"../../../images/defaultProfileF.png\";\nimport css from \"./CastItem.module.css\";\n\nconst CastItem = ({name, character, img, gender}) => {\n\n    const defaultImg = gender === 1 ? defaultImgF : defaultImgM;\n\n    const imgPath = img ? `${moviesAPI.imgBaseURL}${img}` : defaultImg;\n\n    return (\n        <li className={css.item}> \n            <img src={imgPath} alt={name} width={120}/>\n            <h3>{name}</h3>\n            <p><span className={css.accent}>Character: </span>\n                {character ? ` ${character}` : ' unknown'}\n            </p>\n        </li>\n    )\n\n}\n\nexport default CastItem;","// extracted by mini-css-extract-plugin\nexport default {\"cast-list\":\"Cast_cast-list__ond-A\"};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { moviesAPI } from \"services/moviesAPI\";\n\nimport  Loader  from \"components/Loader/Loader\";\nimport CastItem from \"./CastItem/CastItem\";\nimport css from \"./Cast.module.css\";\n\nconst Cast = () => {\n\n    const {movieId} = useParams();\n    const [cast, setCast] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n\n        const controller = new AbortController();\n        const { signal } = controller;\n\n        setIsLoading(true);\n\n        const fetchData = async () => {\n            try {\n                const {cast} = await moviesAPI.getCast(movieId, signal);\n                setCast(cast);\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setIsLoading(false);\n            }\n        } \n\n        fetchData()\n\n        return () =>  controller.abort();\n\n    }, [movieId])\n    \n    return (\n        <div>\n            {isLoading && <Loader/>}\n            {(cast && cast.length !==0 ) ? \n                <ul className={css['cast-list']} >\n                    {cast.filter(({known_for_department:role}) => role === 'Acting')\n                    .map(({name, character, profile_path:img, gender}) => \n                    <CastItem\n                        name={name}\n                        character={character}\n                        img={img}\n                        gender={gender}\n                        key={name + character}\n                    /> )}\n                </ul>\n                : <div>Cast of this movie wasn't found. Please try again later.</div>\n            }\n        </div>\n    )\n}\n\nexport default Cast;\n\n","const API_KEY = 'ef2f22bb4de9529af845b70082225b5a';\nconst imgBaseURL = 'https://image.tmdb.org/t/p/w500'\n\n\nconst fetchTrending = async (signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n\n    const response = await fetch(fetchURL, { signal })\n    const data = await response.json()\n    return data\n}\n\nconst fetchMovieByQuery = async (query, signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n \n    const response = await fetch(fetchURL, { signal })\n    const data = await response.json()\n    return data\n}\n\nconst fetchMovieDetails = async (movieID, signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en-US`\n \n    const response = await fetch(fetchURL, { signal })\n    const data = await response.json()\n    return data\n}\n\nconst fetchMovieCast = async (movieID, signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`\n \n    const response = await fetch(fetchURL, { signal })\n    const data = await response.json()\n    return data\n}\n\nconst fetchMovieReviews = async (movieID, signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n \n    const response = await fetch(fetchURL, { signal })\n    const data = await response.json()\n    return data\n}\n\nexport const moviesAPI = {\n    getTrending: fetchTrending,\n    getMovies: fetchMovieByQuery,\n    getDetails: fetchMovieDetails,\n    getCast: fetchMovieCast,\n    getReviews: fetchMovieReviews,\n    imgBaseURL,\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["name","character","img","defaultImg","gender","defaultImgF","defaultImgM","imgPath","moviesAPI","className","css","src","alt","width","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","controller","AbortController","signal","fetchData","console","log","abort","Loader","length","filter","known_for_department","map","profile_path","API_KEY","fetchTrending","fetchURL","fetch","response","json","data","fetchMovieByQuery","query","fetchMovieDetails","movieID","fetchMovieCast","fetchMovieReviews","getTrending","getMovies","getDetails","getCast","getReviews","imgBaseURL","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}