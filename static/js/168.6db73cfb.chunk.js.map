{"version":3,"file":"static/js/168.6db73cfb.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/moviesAPI.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"review-list\":\"Reviews_review-list__ufE75\",\"item\":\"Reviews_item__DJKij\",\"review-date\":\"Reviews_review-date__WrMfS\"};","import Loader from \"components/Loader/Loader\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { moviesAPI } from \"services/moviesAPI\";\nimport css from \"./Reviews.module.css\";\n\nconst Reviews = () => {\n\n    const {movieId} = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n\n        const controller = new AbortController();\n        const { signal } = controller;\n\n        setIsLoading(true);\n\n        const fetchData = async () => {\n            try {\n                const {results} = await moviesAPI.getReviews(movieId, signal)\n                // console.log(results);\n                setReviews(results)\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setIsLoading(false);\n            }\n        } \n\n        fetchData()\n\n        return () =>  controller.abort();\n\n    }, [movieId])\n\n\n    return (\n        <>\n        {isLoading && <Loader/>}\n\n        {reviews.length === 0 \n            ?   <div>\n                    There aren't reviews for this movie yet.\n                </div> \n            : <ul className={css['review-list']}>\n            {reviews.map(({author, content, id, created_at}) => { \n            \n                const date = new Date(created_at);\n                const formatedDate = date.toLocaleString();\n            \n                return (\n                <li key={id} className={css.item}>\n                    <h3>Author: {author}</h3>\n                    <p>{content}</p>\n                    <p className={css['review-date']}>{formatedDate}</p>\n                </li>\n            )})}\n            </ul>\n        }\n\n        </>\n    )    \n}\n\nexport default Reviews;","const API_KEY = 'ef2f22bb4de9529af845b70082225b5a';\nconst imgBaseURL = 'https://image.tmdb.org/t/p/w500'\n\n\nconst fetchTrending = async (signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n\n    const response = await fetch(fetchURL, { signal })\n    const data = await response.json()\n    return data\n}\n\nconst fetchMovieByQuery = async (query, signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n \n    const response = await fetch(fetchURL, { signal })\n    const data = await response.json()\n    return data\n}\n\nconst fetchMovieDetails = async (movieID, signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en-US`\n \n    const response = await fetch(fetchURL, { signal })\n    const data = await response.json()\n    return data\n}\n\nconst fetchMovieCast = async (movieID, signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`\n \n    const response = await fetch(fetchURL, { signal })\n    const data = await response.json()\n    return data\n}\n\nconst fetchMovieReviews = async (movieID, signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n \n    const response = await fetch(fetchURL, { signal })\n    const data = await response.json()\n    return data\n}\n\nexport const moviesAPI = {\n    getTrending: fetchTrending,\n    getMovies: fetchMovieByQuery,\n    getDetails: fetchMovieDetails,\n    getCast: fetchMovieCast,\n    getReviews: fetchMovieReviews,\n    imgBaseURL,\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","controller","AbortController","signal","fetchData","moviesAPI","results","console","log","abort","Loader","length","className","css","map","author","content","id","created_at","formatedDate","Date","toLocaleString","API_KEY","fetchTrending","fetchURL","fetch","response","json","data","fetchMovieByQuery","query","fetchMovieDetails","movieID","fetchMovieCast","fetchMovieReviews","getTrending","getMovies","getDetails","getCast","getReviews","imgBaseURL","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}