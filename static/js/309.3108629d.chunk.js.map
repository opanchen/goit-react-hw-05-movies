{"version":3,"file":"static/js/309.3108629d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","webpack://react-homework-template/./src/components/MovieMainInfo/MovieMainInfo.module.css?904d","components/MovieMainInfo/MovieMainInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/moviesAPI.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"add-info\":\"MovieDetails_add-info__Rr+5j\",\"add-nav\":\"MovieDetails_add-nav__ZmH79\",\"page-link\":\"MovieDetails_page-link__TJQ+u\"};","// extracted by mini-css-extract-plugin\nexport default {\"main-info\":\"MovieMainInfo_main-info__F7wYr\",\"description\":\"MovieMainInfo_description__AbXuj\",\"descr-item\":\"MovieMainInfo_descr-item__MYTCq\"};","import { moviesAPI } from \"services/moviesAPI\";\nimport defaultImg from \"../../images/defaultPoster.jpeg\";\nimport css from \"./MovieMainInfo.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst MovieMainInfo = ({movie}) => {\n\n    const {title, overview, release_date:releaseDate, genres, poster_path:poster, vote_average:vote} = movie;\n\n    const posterPath = poster ? `${moviesAPI.imgBaseURL}${poster}` : defaultImg;\n\n    const year = releaseDate ? releaseDate.slice(0, 4) : 'unknown';\n\n    return (\n        <section className={css['main-info']}>\n        <img src={posterPath} alt={title} width={320}/>\n        <div className={css.description} >\n            <h1>{title} ({year})</h1>\n            <p>User Score: {Math.round(Number(vote) * 10)}%  </p>\n            <div className={css['descr-item']}>\n                <h2>Overview</h2>\n                <p>{overview}</p>\n            </div>\n            <div className={css['descr-item']}>\n                <h2>Genres</h2>\n                <p>{genres?.length !== 0 ? genres.map(item => item.name).join(' ') : 'unknown'}</p>\n            </div>\n        </div>\n       </section>\n    )\n}\n\nMovieMainInfo.propTypes = {\n    movie: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      release_date: PropTypes.string,\n      genres: PropTypes.array,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number,\n    }).isRequired,\n}\n\nexport default MovieMainInfo;","import { useEffect, useRef, useState, Suspense } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\n\nimport { moviesAPI } from \"services/moviesAPI\";\nimport Loader from \"components/Loader/Loader\";\nimport css from \"./MovieDetails.module.css\";\nimport MovieMainInfo from \"components/MovieMainInfo/MovieMainInfo\";\n\nconst MovieDatails = () => {\n\n    const { movieId } = useParams();\n\n    const [movie, setMovie] = useState(null);\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    const location = useLocation();\n    \n    const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n \n    useEffect(() => {\n        const controller = new AbortController();\n        const { signal } = controller;\n\n        setIsLoading(true)\n\n\n        const fetchData = async () => {\n            try {\n                const data = await moviesAPI.getDetails(movieId, signal)\n\n                if (data.success === false) {\n                    setError('Something went wrong... Information about this movie was not found yet. Please try again later.')\n                    return\n                }\n\n                setMovie(data);\n            } catch (error) {\n                setError('Something went wrong... Please try again later.')\n            } finally {\n                setIsLoading(false)\n            }\n        } \n\n        fetchData()\n    \n        return () => controller.abort();\n    \n    }, [movieId])\n\n    return (\n        <div className={css.wrapper}>\n            <Link to={backLinkLocationRef.current} className={css['page-link']}>Go back</Link>\n            {isLoading && <Loader />}\n            {error && <div>{error}</div>}\n            {movie && \n                <>\n                    <MovieMainInfo movie={movie} />\n\n                    <section className={css['add-info']}>\n                        <h2>Additional information</h2>\n                        <ul className={css['add-nav']}>\n                        <li>\n                            <Link to={'cast'} className={css['page-link']}>Cast</Link>\n                        </li>\n                        <li>\n                            <Link to={'reviews'} className={css['page-link']}>Reviews</Link>\n                        </li>\n                    </ul>\n\n                    <Suspense fallback={<Loader/>}>\n                        <Outlet />\n                    </Suspense>\n                    </section>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default MovieDatails;","const API_KEY = 'ef2f22bb4de9529af845b70082225b5a';\nconst imgBaseURL = 'https://image.tmdb.org/t/p/w500'\n\n\nconst fetchTrending = async (signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n\n    const response = await fetch(fetchURL, { signal })\n\n    if (!response.ok) throw new Error (response.status)\n\n    const data = await response.json()\n    return data\n}\n\nconst fetchMovieByQuery = async (query, signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n \n    const response = await fetch(fetchURL, { signal })\n\n    if (!response.ok) throw new Error (response.status)\n\n    const data = await response.json()\n    return data\n}\n\nconst fetchMovieDetails = async (movieID, signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en-US`\n \n    const response = await fetch(fetchURL, { signal })\n\n    if (!response.ok) throw new Error (response.status)\n\n    const data = await response.json()\n    return data\n}\n\nconst fetchMovieCast = async (movieID, signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`\n \n    const response = await fetch(fetchURL, { signal })\n\n    if (!response.ok) throw new Error (response.status)\n\n    const data = await response.json()\n    return data\n}\n\nconst fetchMovieReviews = async (movieID, signal) => {\n    const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n \n    const response = await fetch(fetchURL, { signal })\n\n    if (!response.ok) throw new Error (response.status)\n\n    const data = await response.json()\n    return data\n}\n\nexport const moviesAPI = {\n    getTrending: fetchTrending,\n    getMovies: fetchMovieByQuery,\n    getDetails: fetchMovieDetails,\n    getCast: fetchMovieCast,\n    getReviews: fetchMovieReviews,\n    imgBaseURL,\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movie","title","overview","releaseDate","release_date","genres","poster","poster_path","vote","vote_average","posterPath","moviesAPI","defaultImg","year","slice","className","css","src","alt","width","Math","round","Number","length","map","item","name","join","movieId","useParams","useState","setMovie","error","setError","isLoading","setIsLoading","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","controller","AbortController","signal","fetchData","data","success","abort","to","current","Loader","Suspense","fallback","API_KEY","fetchTrending","fetchURL","fetch","response","ok","Error","status","json","fetchMovieByQuery","query","fetchMovieDetails","movieID","fetchMovieCast","fetchMovieReviews","getTrending","getMovies","getDetails","getCast","getReviews","imgBaseURL","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}